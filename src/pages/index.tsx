import Head from "next/head";
import Slider from "../components/home/Slider";
import FeaturedProduct from "../components/home/FeaturedProduct";
import Commit from "../components/home/Commit";
import TopNewArrivals from "../components/home/TopNewArrivels";
import Footer from "../components/Footer";
import { QueryClient, dehydrate, useQuery } from "react-query";
import { useLayoutEffect } from "react";
import { useDispatch } from "react-redux";
import { setUser } from "../features/user/userSlice";
import { getNewProducts, getFeaturedProduct } from "../utils/fetch";
import { Box } from "@mui/material";

const Home = ({authencation}: {authencation: boolean}) => {
  const dispatch = useDispatch();
  const featuredProducts = useQuery<Product[]>("getFeaturedProduct", getFeaturedProduct);
  const newProducts = useQuery<Product[]>("getNewProducts", getNewProducts);

  useLayoutEffect(() => {
    if (!authencation) {
      dispatch(setUser({_id: "", email: "", username: "", password: "", address: ""}));
    }
  },[])

  return (
    <>
      <Head>
        <title>laptop ecommerce</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <header>
          <Box>
            <Slider />
            <Commit />
          </Box>
        </header>
        <FeaturedProduct featuredProducts={featuredProducts} />
        <TopNewArrivals newProducts={newProducts} />
      </main>
      <Footer />
    </>
  );
};

export async function getServerSideProps({req}: {req: any}) {
  
  const queryClient = new QueryClient();

  await queryClient.prefetchQuery("getNewProducts", getNewProducts);
  await queryClient.prefetchQuery("getFeaturedProducts", getFeaturedProduct);

  if (req.cookies.authtokenadmin || req.cookies.authtokenuser) { 
    return {
      props: { dehydratedState: dehydrate(queryClient), authencation: true },
    }
  }

  return {
    props: {dehydratedState: dehydrate(queryClient), authencation: false},
  }
}

export default Home;
